server:
   name: SecurityCentre
   port: 80
   servlet:
      context-path: /SecurityCentre

spring:
   profiles:
      include: easecurity
# 数据库配置
   datasource:
      username: easuser
      password: easuser
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/easecurity?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF8
    
# 缓存配置
   cache:
      type: redis
   redis:
      host: 128.0.0.2
      port: 16379
#      password: 123456
      database: 5
      timeout: 3000
      lettuce:
         pool:
            max-wait: 1000  # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接 抛出JedisConnectionException
            max-active: 5   # 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool 的状态为exhausted(耗尽)
            max-idle: 1     # 连接池中的最大空闲连接，默认值也是8。
            min-idle: 1     # 连接池中的最小空闲连接，默认值也是0。
         shutdown-timeout: 10000ms  # 关闭超时时间
# 设置Redis序列化类。对于稳定的生产系统，建议选用最快速的序列化类；对于开发或者刚上线的系统，建议选用易解读的序列化类。
# 目前支持常见的RedisTemplate类。包括：
# 支持自定义，自定义类需要实现com.easecurity.core.redis.OemRedisSerializer接口
      serializer:
         key: StringRedisSerializer
#         value: Jackson2JsonRedisSerializer
         value: Jackson2JsonRedisSerializer
         hashkey: StringRedisSerializer
         hashvalue: GenericJackson2JsonRedisSerializer

logging:
   level:
      root: INFO
      com:
         easecurity: DEBUG
   pattern:
      console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(---){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){faint}%clr([%F:%L]){cyan} %clr(:){faint} %m%n%wex'

