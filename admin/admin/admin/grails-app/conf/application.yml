info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
---
server:
  port: 8080
  servlet:
    context-path: /admin
    session:
      timeout: 7200
      cookie:
        name: ADSECURITY
        path: /
        httpOnly: true
---
spring:
  application:
    name: admin
  config:
    import: classpath:/easecurity.yml
  redis:
    host: 128.0.0.2
    port: 16379
#    password: 123456
    database: 2
environments:
  production:
    grails:
      plugin:
        console:
          enabled: false
          fileStore:
            remote:
              enabled: false
grails:
  databinding:
    dateFormats:
      - 'yyyy-MM-dd HH:mm:ss'
      - 'yyyy-MM-dd HH:mm:ss.SSS'
      - "yyyy-MM-dd’T’hh:mm:ss’Z'"
      - "yyyy-MM-dd'T'HH:mm:ss.SSSX"
      - 'yyyy-MM-dd'
      - 'HH:mm:ss'
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      json:
        - application/json
        - text/json
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      js: text/javascript
      rss: application/rss+xml
      text: text/plain
      all: '*/*'
  gorm:
    reactor:
      events: false
  cache:
    enabled: true
    cleanAtStartup: false
    cacheManager: grails.plugin.cache.GrailsConcurrentMapCacheManager
  views:
    default:
      codec: html
    json:
      generator:
        dateFormat: 'yyyy-MM-dd HH:mm:ss'
        time-zone: GMT+8

dataSource:
  dbCreate: update
  #  dbCreate: create-drop
  driverClassName: com.mysql.cj.jdbc.Driver
  url: jdbc:mysql://128.0.0.2:3306/easecurity?serverTimezone=GMT%2b8&useUnicode=true&characterEncoding=UTF8
  username: easuser
  password: easuser
  pooled: true
  jmxExport: true
#  autocommit: true
#  logSql: true
hibernate:
  # if false, uses the Grails DirtyCheckable; if true, uses Hibernate checking.
  # if true, The implementation modifies all setters of your class so that dirty checking is tracked per field. However, there is
  # one corner case where you do name = "blah" in a method internal to the class, the setter will not be called and
  # property will not be marked as dirty. Hence, changing it to setName("blah") resolves the issue.
  hibernateDirtyChecking: true
  hbm2ddl:
    auto: update
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false

logging:
  level:
    root: INFO
    com:
      easecurity: DEBUG
  pattern:
    console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(-){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){faint}%clr([%F:%L]){cyan} %clr(:){faint} %m%n%wex'

