/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */
buildscript {
    repositories {
	// 使用国内阿里云仓库，下载速度快
	maven { url 'https://maven.aliyun.com/repository/gradle-plugin'}
    }
    dependencies {
	// Docker插件
	// 官方文档https://bmuschko.github.io/gradle-docker-plugin/current/user-guide/
	classpath('com.bmuschko:gradle-docker-plugin:6.4.0')
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

apply from: "../common.gradle"
// 应用插件
apply plugin: 'com.bmuschko.docker-spring-boot-application'

dependencies {
    implementation project(":easecurity-core-api")

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.security:spring-security-oauth2-core'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.6.1'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.apache.commons:commons-pool2'
    implementation 'mysql:mysql-connector-java'
    implementation 'com.alibaba:fastjson:1.2.79'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

docker {
    url = 'http://128.0.0.2:2375'
    springBootApplication {
	baseImage = 'openjdk:8-alpine-font'
	maintainer = 'liulufeng'
	ports = [80]
	images = [
	    '128.0.0.2:5000/com.easecurity/securitycentre:latest'
	]
	jvmArgs = ['-Xmx2048M -Xms2048M -Xmn1024M -Xss256K -XX:+DisableExplicitGC -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:MaxMetaspaceSize=256M -XX:MetaspaceSize=256M -XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses -XX:+CMSClassUnloadingEnabled -XX:+ParallelRefProcEnabled -XX:+CMSScavengeBeforeRemark']
    }
}
