plugins {
//    id "groovy"
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.grails.grails-web" version "5.3.1"
    id "org.grails.plugins.views-json" version "2.3.2"
    id "war"
    id "idea"
    id "application"
    id "eclipse"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
	maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    maven { url "https://maven.aliyun.com/repository/grails-core" }
    maven { url "https://maven.aliyun.com/repository/grails-plugin" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.grails.org/grails/core/" }
}

version "0.2"
group = "com.easecurity"

java {
    sourceCompatibility = '1.8'
    targetCompatibility = 1.8
}

configurations {
    all {
        resolutionStrategy.force 'org.codehaus.groovy:groovy-xml:3.0.13'
    }
}

grails {
    plugins {
        implementation project(':scaffolding')
    }
}

dependencies {
    implementation("com.easecurity:easecurity-core-api:0.0.2")

    implementation("org.grails:grails-core")
    implementation("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors")
    implementation("org.grails:grails-plugin-rest")
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings")
    implementation("org.grails:grails-web-boot")
    implementation("org.grails.plugins:cache:5.0.1")
    implementation("org.grails.plugins:hibernate5")
    implementation("org.grails.plugins:views-json")
    implementation("org.grails.plugins:views-json-templates")
    implementation('org.grails.plugins:gorm-logical-delete:2.0.0.M2')

    implementation "org.grails.plugins:gsp"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:spring-security-core:5.2.1"
    implementation "jakarta.annotation:jakarta.annotation-api:2.1.1"

    implementation("org.hibernate:hibernate-core:5.6.15.Final")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-tomcat")
    implementation("org.springframework.boot:spring-boot-starter-validation")

    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.24.4'
	implementation 'org.codehaus.groovy:groovy-dateutil'

    compileOnly("io.micronaut:micronaut-inject-groovy")
    console("org.grails:grails-console")
    profile "org.grails.profiles:web"

    runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    runtimeOnly("org.glassfish.web:el-impl:2.2.1-b05")
    runtimeOnly("org.grails.plugins:grails-console:2.1.1")
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.grails:grails-gorm-testing-support")
    testImplementation("org.grails:views-json-testing-support")
//    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
//    testImplementation("org.testcontainers:junit-jupiter")
//    testImplementation("org.testcontainers:mysql")
//    testImplementation("org.testcontainers:testcontainers")
//    testImplementation("io.micronaut:micronaut-http-client")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:2.7.17"
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.8"
    }
}

application {
    mainClass.set("com.easecurity.admin.Application")
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-Dfile.encoding=UTF-8',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

runCommand {
    jvmArgs('-Dfile.encoding=UTF-8')
}