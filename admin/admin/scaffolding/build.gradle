plugins {
//    id "groovy"
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.grails.grails-web" version "5.3.1"
    id "org.grails.plugins.views-json" version "2.3.2"
    id "idea"
    id "application"
    id "java-library"
    id "org.grails.grails-plugin" version "5.3.1"
}

//buildscript {
//    repositories {
//		mavenCentral()
//		mavenLocal()
//		maven { url "https://maven.aliyun.com/repository/public" }
//        maven { url "https://repo.grails.org/grails/core" }
//		maven { url "https://repo.grails.org/grails/core/" }
//    }
//    dependencies {
//        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
//        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
//    }
//}

repositories {
    mavenCentral()
	maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    maven { url "https://maven.aliyun.com/repository/grails-core" }
    maven { url "https://repo.grails.org/grails/core" }
}

version "0.1"
group "org.grails.plugins"

//apply plugin: 'java-library'
//apply plugin:"eclipse"
//apply plugin:"idea"
//apply plugin:"org.grails.grails-plugin"
//apply plugin:"asset-pipeline"
//apply plugin:"org.grails.grails-gsp"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    compileOnly "org.grails:grails-dependencies"
    compileOnly "org.grails:grails-web-boot"
    compileOnly 'javax.servlet:javax.servlet-api'
    compileOnly "org.grails.plugins:fields:3.0.0.RC1"

    implementation "com.alibaba:fastjson:1.2.83"

}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

runCommand{
    jvmArgs('-Dfile.encoding=UTF-8')
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

//tasks.withType(Test) {
//    useJUnitPlatform()
//}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false



//assets {
//    packagePlugin = true
//}
